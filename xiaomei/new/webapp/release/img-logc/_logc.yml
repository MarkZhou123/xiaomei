name: {{ .ProName }}_dev # name used to alarm
mailer: "mailer://smtp.qq.com:25/?user=小美<xiaomei-go@qq.com>&pass=zjsbosjlhgugechh"
keepers: [ "小美<xiaomei-go@qq.com>" ]
rotate:
  time: "33 33 3 * * *" # cron time pattern to execute rotate.cmd
  cmd: [ logrotate, ../logrotate.conf ]
files:
  app.log: # file path, required, either relative or absolute is ok.
    # collector id, it will be use as part of offset file path, so it should be path safe.
    # make sure different collectors of the same file has unique id.
    es:
      <<: *app
      type: app-log
  app.err:
    es:
      <<: *app
      type: app-err

app: &app
  "@type": elasticsearch
  addrs:
    - http://127.0.0.1:9200/logc-dev-
  # index can be time series index or regular index.
  # index doesn't contain "<" and ">" acts as a regular index.
  # in time series index, string between "<" and ">" acts as time layout.
  # see https://golang.org/pkg/time/#Parse for time layout format.
  index: {{ .ProNameUrlSafe }}-app.<2006.01.02>
  mapping: *mapping

  ### the following fields is effective only when "index" field is a time series index. ###

  # field used to determine which time series index to write to.
  timeField: at
  # the number of latest time series indices to keep. old indices will be deleted.
  indexKeep: 3


mapping: &mapping
  at: { type: date }
  duration: { type: float }
  host: { type: keyword }
  method: { type: keyword }
  path: { type: text, fields: { raw: { type: keyword } } }
  query: { type: text }
  status: { type: keyword }
  req_body_size: { type: integer }
  req_body: { type: text }
  res_body_size: { type: integer }
  res_body: { type: text }
  ip: { type: ip }
  refer: { type: text }
  agent: { type: text }
  proto: { type: keyword }
  # session: sess
