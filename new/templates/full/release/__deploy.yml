dev:
  services:
    access:
      nodes: { }
    app:
      image: "{{ .Registry }}{{ .ProNameUrlSafe }}/app/dev"
      ports: [ 3001, 4001 ]
      options: [ -v, "{{ .ProName }}-logs:/home/ubuntu/{{ .ProName }}/log" ]
    web:
      image: "{{ .Registry }}{{ .ProNameUrlSafe }}/web/dev"
      ports: [ 8001 ]
      options: [ -v, "{{ .ProName }}-logs:/var/log/nginx/{{ .ProName }}" ]
  volumesToCreate: [ "{{ .ProName }}-logs" ]
qa:
  services:
    app:
      image: "{{ .Registry }}{{ .ProNameUrlSafe }}/app/qa"
      ports: [ 3001, 4001 ]
      options: [ -v, "{{ .ProName }}-logs:/home/ubuntu/{{ .ProName }}/log" ]
    web:
      image: "{{ .Registry }}{{ .ProNameUrlSafe }}/web/qa"
      ports: [ 8001 ]
      options: [ -v, "{{ .ProName }}-logs:/var/log/nginx/{{ .ProName }}" ]
#   logc:
#     image: "{{ .Registry }}{{ .ProNameUrlSafe }}/logc/qa"
#     options: [
#       -e, "LOGCENV=common",
#       -v, "{{ .ProName }}-logs:/home/ubuntu/{{ .ProName }}-logs",
#       -v, "/var/run/docker.sock:/var/run/docker.sock"
#     ]
  volumesToCreate: [ "{{ .ProName }}-logs" ]
production:
  services:
    app:
      image: "{{ .Registry }}{{ .ProNameUrlSafe }}/app/production"
      ports: [ 3001, 4001 ]
      options: [ -v, "{{ .ProName }}-logs:/home/ubuntu/{{ .ProName }}/log" ]
    web:
      image: "{{ .Registry }}{{ .ProNameUrlSafe }}/web/production"
      ports: [ 8001 ]
      options: [ -v, "{{ .ProName }}-logs:/var/log/nginx/{{ .ProName }}" ]
#   logc:
#     image: "{{ .Registry }}{{ .ProNameUrlSafe }}/logc/production"
#     options: [
#       -e, "LOGCENV=production",
#       -v, "{{ .ProName }}-logs:/home/ubuntu/{{ .ProName }}-logs",
#       -v, "/var/run/docker.sock:/var/run/docker.sock"
#     ]
  volumesToCreate: [ "{{ .ProName }}-logs" ]

