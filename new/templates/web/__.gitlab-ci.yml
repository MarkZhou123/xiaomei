stages:
  - deploy

variables:
  GIT_CLEAN_FLAGS: none

deploy:
  stage: deploy
  tags:
    - shell-xiaomei-qa  # match shell runner for qa that has xiaomei command.
  script:
    - npm install
    - npm run build -- --mode $CI_ENVIRONMENT_NAME
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - xiaomei web deploy $CI_ENVIRONMENT_NAME --no-watch
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://{{ .ProNameUrlSafe }}.$CI_COMMIT_REF_NAME.{{ .Domain }}
  only:
    refs: [ branches ]
    variables: [ '$CI_COMMIT_REF_NAME =~ /^(qa|qa2|uat)$/' ]

deploy-production:
  stage: deploy
  tags:
    - shell-xiaomei-production # match shell runner for production that has xiaomei command.
  script:
    - npm install
    - npm run build -- --mode production
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - xiaomei web deploy production --no-watch
  environment:
    name: production
    url: https://{{ .ProNameUrlSafe }}.{{ .Domain }}
  only:
    refs: [ branches ]
    variables: [ '$CI_COMMIT_REF_NAME == "master"' ]
  when: manual

before_script:
  - buildDir=$(pwd) && echo $buildDir
  - projectDir=~/front/{{ .ProPath }} && echo $projectDir
  - mkdir -p $(dirname $projectDir) && ln -sfT $buildDir $projectDir && cd $projectDir

